merge_and_count(arr, left, mid, right):
    Initialize temp_arr as empty list
    Initialize i to left, j to mid + 1, inv_count to 0

    While i <= mid and j <= right:
        If arr[i] <= arr[j]:
            Append arr[i] to temp_arr
            Increment i
        Else:
            Append arr[j] to temp_arr
            Increment inv_count by (mid - i + 1)
            Increment j

    While i <= mid:
        Append arr[i] to temp_arr
        Increment i

    While j <= right:
        Append arr[j] to temp_arr
        Increment j

    For k from 0 to length of temp_arr - 1:
        arr[left + k] = temp_arr[k]

    Return inv_count


sort_and_count(arr, left, right):
    If left >= right:
        Return 0

    mid = (left + right) // 2
    inv_count = sort_and_count(arr, left, mid)
    inv_count += sort_and_count(arr, mid + 1, right)
    inv_count += merge_and_count(arr, left, mid, right)

    Return inv_count