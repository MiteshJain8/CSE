Dijkstra’s(Graph[], src)
  Let S be the set of explored nodes
  For each u ∈ S, we store a distance,   distance(u)
  Initially, S = {src} and distance(src) = 0

  While S ≠ V do
    Select a node v ∉ S with at least one edge from S for which
    distance'(v) = min_{e=(u,v) : u ∈ S} {distance(u) + weight(e)} is as small as possible
    Add v to S
    Define distance(v) = distance'(v)
  EndWhile

Design Strategy: Greedy

T = O(V^2) without using min-heap

S = O(E+V) due to adjacency list