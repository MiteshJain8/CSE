Partition(array[], low, high):
    Set pivot to array[low]
    Set i to low + 1
    For j from low + 1 to high:
        If array[j] <= pivot:
            Swap array[i] with array[j]
            Increment i by 1
    Swap array[i - 1] with array[low]
    Return i - 1

QuickSort(array[], low, high):
    If low < high:
        Set pi to Partition(array[], low, high)
        quickSort(array[], low, pi-1)
        quickSort(array[], pi+1, high)

Design Strategy: Divide and Conquer

T = O(n log n) for best and avg case and O(n^2) for worst case

S = due to recursive stack O(log n) for best and avg case and O(n) for worst case